<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jingling.userservice.mapper.ManagerMapper">

    <select id="getAllManager" resultType="com.jingling.userservice.vo.ManagerVo">

        SELECT manager_id, manager_name, password, phone, email, salary, address, credit, is_locked, create_time, update_time, role_id
        FROM manager, user_role
        WHERE manager.manager_id = user_role.user_id AND user_role.role_id = #{roleId}
        LIMIT #{start}, #{size}

    </select>

    <select id="getManagerCount" resultType="int">

        SELECT COUNT(*)
        FROM manager,user_role
        WHERE manager.manager_id = user_role.user_id AND user_role.role_id = #{roleId}

    </select>

    <select id="getCollectorInfoByIds" resultType="com.jingling.userservice.vo.ManagerVo">

        SELECT managerId, managerName, address, credit
        FROM manager
        WHERE managerId IN
        <foreach collection="array" index="index" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>

    </select>

    <select id="getManagerInfoById" resultType="com.jingling.userservice.vo.ManagerVo">

        SELECT manager_id, manager_name, password, phone, email, salary, address, credit, is_locked, create_time, update_time, role_id
        FROM manager, user_role
        WHERE manager.manager_id = user_role.user_id AND manager_id = #{managerId}

    </select>

    <update id="updateManager" parameterType="com.jingling.userservice.vo.ManagerVo">

        UPDATE manager
        <set>
            <if test="managerName!=null">
                manager_name = #{managerName},
            </if>
            <if test="password!=null">
                password = #{password},
            </if>
            <if test="phone!=null">
                phone = #{phone},
            </if>
            <if test="email!=null">
                email = #{email},
            </if>
            <if test="salary!=null">
                salary = #{salary},
            </if>
            <if test="address!=null">
                address = #{address},
            </if>
            <if test="isLocked!=null">
                is_locked = #{isLocked},
            </if>
            <if test="credit!=null">
                credit = #{credit},
            </if>
            <if test="updateTime!=null">
                update_time = #{updateTime}
            </if>
        </set>
        WHERE manager_id = #{managerId}

    </update>

    <update id="updateRole">

        UPDATE user_role
        SET role_id = #{status}
        WHERE user_id = #{managerId}

    </update>

    <delete id="deleteManagerById">

        DELETE FROM manager
        WHERE manager_id = #{managerId}

    </delete>

    <delete id="deleteManagerByIds">

        DELETE FROM manager
        WHERE manager_id IN
        <foreach collection="array" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>

    </delete>

    <delete id="deleteUserRoleByUserIds">

        DELETE FROM user_role
        WHERE user_id IN
        <foreach collection="array" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>

    </delete>

    <insert id="insertManager" parameterType="manager" useGeneratedKeys="true" keyProperty="managerId" keyColumn="manager_id">

        INSERT INTO manager(manager_name, password, phone, email, salary, address, credit, is_locked, create_time, update_time)
        VALUES (#{managerName}, #{password}, #{phone}, #{email}, #{salary}, #{address}, #{credit}, #{isLocked}, #{createTime}, #{updateTime})

    </insert>

    <insert id="insertUserRole" parameterType="com.jingling.basic.po.UserRole">

        INSERT INTO user_role(user_id, role_id)
        VALUES (#{userId}, #{roleId})

    </insert>


</mapper>